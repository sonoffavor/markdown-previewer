{"version":3,"sources":["components/Header.jsx","components/Footer.jsx","components/Editor.jsx","components/Previewer.jsx","components/App.jsx","index.js"],"names":["Header","Footer","year","Date","getFullYear","library","add","faArrowsAlt","faCompress","faWindowMinimize","faWindowMaximize","Editor","props","useState","isExpanded","setExpanded","expandedWidth","setExpandedWidth","minimizeWindow","setMinimizeWindow","markdown","setMarkdown","minWidth","useMediaQuery","maxWidth","hideShowExpandToggle","hideShowMinMaxToggle","useEffect","onChange","id","style","width","className","display","icon","onClick","type","rows","event","text","target","value","defaultValue","Previewer","dangerouslySetInnerHTML","rawMarkup","marked","breaks","cleanRawMarkup","DOMPurify","sanitize","console","log","__html","getMarkdown","App","newMarkdown","setNewMarkdown","ReactDOM","render","document","getElementById"],"mappings":"+KAUeA,MARf,WACI,OACI,iCACI,uDCMGC,MATf,WACI,IAAMC,GAAO,IAAIC,MAAOC,cACxB,OACI,iCACI,gDAAgBF,Q,6BCA5BG,IAAQC,IAAIC,IAAaC,IAAYC,IAAkBC,KAuHxCC,MArHf,SAAgBC,GAAQ,IAAD,EACeC,oBAAS,GADxB,mBACZC,EADY,KACAC,EADA,OAEuBF,mBAAS,OAFhC,mBAEZG,EAFY,KAEGC,EAFH,OAGyBJ,oBAAS,GAHlC,mBAGZK,EAHY,KAGIC,EAHJ,OAIaN,mBAC5B,ymCALe,mBAIZO,EAJY,KAIFC,EAJE,KAsCbC,EAAWC,YAAc,uBACzBC,EAAWD,YAAc,sBAa/B,SAASE,IAEDR,EADAK,EACiB,MAEA,OAIjBP,GADAD,GAQR,SAASY,IAEDP,GADAD,GAQR,OAlCAS,qBAAU,kBAAMf,EAAMgB,SAASR,MAmC3B,sBAAKS,GAAG,gBAAgBC,MAAO,CAACC,OAAsB,IAAfjB,GAAyBE,GAAhE,UACI,sBAAKgB,UAAU,iBAAf,mBACI,sBAAKH,GAAG,wBAAwBC,MAAO,CAACG,SAA4B,IAAnBf,IAAwC,IAAbM,EAAoB,OAAS,SAAzG,UACI,cAAC,IAAD,CACIU,KAAM3B,IACNuB,MAAO,CAACG,SAAwB,IAAfnB,EAAsB,QAAU,QACjDqB,QAASV,IAEb,cAAC,IAAD,CACIS,KAAM1B,IACNsB,MAAO,CAACG,SAAwB,IAAfnB,EAAsB,QAAU,QACjDqB,QAASV,OAGjB,sBAAKI,GAAG,yBAAR,UACI,cAAC,IAAD,CACIK,KAAMzB,IACNqB,MAAO,CAACG,SAA4B,IAAnBf,EAA0B,QAAU,QACrDiB,QAAST,IAEb,cAAC,IAAD,CACIQ,KAAMxB,IACNoB,MAAO,CAACG,SAA4B,IAAnBf,EAA0B,QAAU,QACrDiB,QAAST,UAIrB,0BACIG,GAAG,SACHO,KAAK,OACLC,KAAK,KACLT,SA/DZ,SAAsBU,GAClB,IAAMC,EAAOD,EAAME,OAAOC,MAC1BpB,EAAYkB,GACZ3B,EAAMgB,SAASR,IA6DPsB,aAActB,EACdU,MAAO,CAACG,SAA4B,IAAnBf,EAA0B,QAAU,c,kCC/FtDyB,MAlBf,SAAmB/B,GAUf,OACI,sBAAKiB,GAAG,iBAAR,UACI,qBAAKG,UAAU,iBAAf,uBACA,qBAAKH,GAAG,UAAUe,wBAV1B,WACI,IAAIC,EAAYC,IAAOlC,EAAMQ,SAAU,CAAC2B,QAAQ,IAC5CC,EAAiBC,IAAUC,SAASL,GAExC,OADAM,QAAQC,IAAIJ,GACL,CAACK,OAAQL,GAM+BM,SCMxCC,MAjBf,WAAgB,IAAD,EAC2B1C,mBAAS,IADpC,mBACJ2C,EADI,KACSC,EADT,KAOX,OACI,gCACI,cAAC,EAAD,IACA,cAAC,EAAD,CAAQ7B,SAPhB,SAAwBR,GACpBqC,EAAerC,MAOX,cAAC,EAAD,CAAWA,SAAUoC,IACrB,cAAC,EAAD,QCfZE,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.408bae26.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Header() {\n    return (\n        <header>\n            <h1>Markdown Previewer</h1>\n        </header>\n    );\n}\n\nexport default Header;","import React from \"react\";\n\nfunction Footer() {\n    const year = new Date().getFullYear();\n    return (\n        <footer>\n            <p>Copyright Â© {year}</p>\n        </footer>\n    )\n}\n\nexport default Footer;","import React, { useState, useEffect } from \"react\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faArrowsAlt, faCompress, faWindowMinimize, faWindowMaximize } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\n\nlibrary.add(faArrowsAlt, faCompress, faWindowMinimize, faWindowMaximize)\n\nfunction Editor(props) {\n    const [isExpanded, setExpanded] = useState(false);\n    const [expandedWidth, setExpandedWidth] = useState(\"80%\");\n    const [minimizeWindow, setMinimizeWindow] = useState(false);\n    const [markdown, setMarkdown] = useState(\n        \"# Welcome to my React Markdown Previewer!\\n\\n\" +\n        \"## This is a sub-heading... \\n\" + \n        \"### And here's some other cool stuff:\\n\\n\" +\n        \"Heres some code, `<div></div>`, between 2 backticks.\\n\\n\" + \n        \"```\\n\" +\n        \"// this is multi-line code:\\n\" +\n        \"function anotherExample(firstLine, lastLine) {\\n\" + \n        \" if (firstLine == '```' && lastLine == '```') {\\n\" +\n        \"  return multiLineCode;\\n\" + \n        \" }\\n\" + \n        \"}\\n\" + \n        \"```\\n\\n\" + \n        \"You can also make text **bold**... whoa!  \\n\" + \n        \"Or _italic_.  \\n\" + \n        \"Or... wait for it... **_both!_**  \\n\" + \n        \"And feel free to go crazy ~~crossing stuff out~~.\\n\\n\" + \n        \"There's also [links](https://www.freecodecamp.com), and\\n\" +\n        \"> Block Quotes! \\n\\n\" + \n        \"And if you want to get really crazy, even tables:\\n\\n\" +\n        \"Wild Header |  Crazy Header | Another Header  \\n\" + \n        \"------------ | ------------- | -------------  \\n\" + \n        \"Your content can | be here, and it | can be here....  \\n\" + \n        \"And here. | Okay. | I think we get it.  \\n\" + \n        \"- And of course there are lists.\\n\" + \n        \"\\t- Some are bulleted.\\n\" + \n        \"\\t\\t- With different indentation levels.\\n\" +\n        \"\\t\\t- That look like this.\\n\\n\\n\" + \n        \"1. And there are numbererd lists too.\\n\" + \n        \"1. Use just 1s if you want!\\n\" + \n        \"1. And last but not least, let's not forget embedded images:\\n\\n\" +\n        \"![React Logo w/ Text](https://goo.gl/Umyytc)\\n\");\n\n    // minWidth is used in calculating expandedWidth state\n    const minWidth = useMediaQuery('(min-width: 1367px)');\n    const maxWidth = useMediaQuery('(max-width: 768px)');\n    \n    // useEffect preloads markdown state when website starts\n    useEffect(() => props.onChange(markdown));\n\n    // handleChange responds to change in textarea\n    function handleChange(event) {\n        const text = event.target.value;\n        setMarkdown(text);\n        props.onChange(markdown);\n    }\n\n    // hideShowExapandToggle sets expanded and expandedWidth states\n    function hideShowExpandToggle() {\n        if (minWidth) {\n            setExpandedWidth(\"60%\");\n        } else {\n            setExpandedWidth(\"80%\");\n        }\n\n        if (isExpanded) {\n            setExpanded(false);\n        } else {\n            setExpanded(true);\n        }\n    }\n\n    // hideShowMinMaxToggle sets minimizeWindow state\n    function hideShowMinMaxToggle() {\n        if (minimizeWindow) {\n            setMinimizeWindow(false);\n        } else {\n            setMinimizeWindow(true);\n        }\n\n    }\n\n    return (\n        <div id=\"editor-window\" style={{width: isExpanded !== false  && expandedWidth}}>\n            <div className=\"window-heading\">Editor\n                <div id=\"expand-toggle-wrapper\" style={{display: minimizeWindow === true || maxWidth === true ? \"none\" : \"block\"}}>\n                    <FontAwesomeIcon \n                        icon={faArrowsAlt} \n                        style={{display: isExpanded !== true ? \"block\" : \"none\"}}\n                        onClick={hideShowExpandToggle}       \n                    />\n                    <FontAwesomeIcon\n                        icon={faCompress}\n                        style={{display: isExpanded === true ? \"block\" : \"none\"}}\n                        onClick={hideShowExpandToggle}\n                    />\n                </div>\n                <div id=\"min-max-toggle-wrapper\">\n                    <FontAwesomeIcon \n                        icon={faWindowMinimize}\n                        style={{display: minimizeWindow !== true ? \"block\" : \"none\"}}\n                        onClick={hideShowMinMaxToggle}\n                    />\n                    <FontAwesomeIcon\n                        icon={faWindowMaximize}\n                        style={{display: minimizeWindow === true ? \"block\" : \"none\"}}\n                        onClick={hideShowMinMaxToggle}\n                    />\n                </div>\n            </div>\n            <textarea \n                id=\"editor\" \n                type=\"text\" \n                rows=\"22\" \n                onChange={handleChange}\n                defaultValue={markdown}\n                style={{display: minimizeWindow !== true ? \"block\" : \"none\"}}\n            >\n            </textarea>\n        </div>\n    );\n}\n\nexport default Editor;","import React from \"react\";\nimport marked from \"marked\";\nimport DOMPurify from \"dompurify\";\n\n\nfunction Previewer(props) {\n\n    // Receives and converts markdown to html\n    function getMarkdown() {\n        let rawMarkup = marked(props.markdown, {breaks: true});\n        let cleanRawMarkup = DOMPurify.sanitize(rawMarkup)\n        console.log(cleanRawMarkup);\n        return {__html: cleanRawMarkup};\n    }\n\n    return (\n        <div id=\"preview-window\">\n            <div className=\"window-heading\">Previewer</div>\n            <div id=\"preview\" dangerouslySetInnerHTML={getMarkdown()}></div>\n        </div>\n    );\n}\n\nexport default Previewer;","// eslint-disable-next-line\nimport React, { useState } from \"react\";\nimport Header from \"./Header.jsx\";\nimport Footer from \"./Footer.jsx\";\nimport Editor from \"./Editor.jsx\";\nimport Previewer from \"./Previewer.jsx\";\n\nfunction App() {\n    const [newMarkdown, setNewMarkdown] = useState(\"\");\n\n    function updateMarkdown(markdown) {\n        setNewMarkdown(markdown);\n    }\n\n    return (\n        <div>\n            <Header />\n            <Editor onChange={updateMarkdown}/>\n            <Previewer markdown={newMarkdown}/>\n            <Footer />\n        </div>\n    );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./components/App.jsx\"\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}